---
- name: Import facts
  ansible.builtin.include_role:
    name: '{{ item }}'
    tasks_from: facts
  loop:
    - certmanager
    - cloudflare
    - k3s

- name: Role Validation
  ansible.builtin.import_tasks:
    file: validation.yaml

- name: Role Provisioning
  when: ansible_host in k3s_map.server.hosts
  block:
    - name: Validate service state
      ansible.builtin.wait_for:
        port: '{{ k3s_vars.server.api.port }}'
        state: drained
        timeout: 30
      any_errors_fatal: true

    - name: Add repository
      kubernetes.core.helm_repository:
        name: '{{ item.org }}'
        repo_url: '{{ item.url }}/{{ item.name }}'
      loop: '{{ victoriametrics_map.helm.repository }}'

    - name: Chart Setup
      run_once: true
      block:
        - name: Create grafana user account secret
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'account.j2') | from_yaml }}"
            kubeconfig: '{{ k3s_map.cluster.kubeconfig }}'
            wait: true

        - name: Set chart postinstall fact
          ansible.builtin.set_fact:
            victoriametrics_postinstall: false

        - name: Install chart
          kubernetes.core.helm:
            chart_ref: '{{ victoriametrics_project.chart }}'
            chart_version: '{{ victoriametrics_vars.kubernetes.helm.chart.version }}'
            kubeconfig: '{{ k3s_map.cluster.kubeconfig }}'
            name: '{{ victoriametrics_vars.kubernetes.helm.chart.alias }}'
            namespace: '{{ victoriametrics_vars.kubernetes.namespace }}'
            values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
            create_namespace: true
            update_repo_cache: true
            wait: true
          register: result
          delay: 1
          retries: 3
          until: result is not failed

        # - name: Gateway Setup
        #   when: cloudflare_vars.kubernetes.host.domain | lower != 'disabled'
        #   block:
        #     - name: Create gateway
        #       kubernetes.core.k8s:
        #         definition: "{{ lookup('ansible.builtin.template', 'gateway.j2') | from_yaml }}"
        #         kubeconfig: '{{ k3s_map.cluster.kubeconfig }}'
        #         wait: true
        #       loop:
        #         - annotations: '{{ victoriametrics_map.service.alertmanager.annotations }}'
        #           hostname: '{{ victoriametrics_map.service.alertmanager.hostname }}'
        #           name: '{{ victoriametrics_map.service.alertmanager.name }}'
        #         - annotations: '{{ victoriametrics_map.service.grafana.annotations }}'
        #           hostname: '{{ victoriametrics_map.service.grafana.hostname }}'
        #           name: '{{ victoriametrics_map.service.grafana.name }}'
        #         - annotations: '{{ victoriametrics_map.service.vmselect.annotations }}'
        #           hostname: '{{ victoriametrics_map.service.vmselect.hostname }}'
        #           name: '{{ victoriametrics_map.service.vmselect.name }}'

        #     - name: Create http route
        #       kubernetes.core.k8s:
        #         definition: "{{ lookup('ansible.builtin.template', 'http_route.j2') | from_yaml }}"
        #         kubeconfig: '{{ k3s_map.cluster.kubeconfig }}'
        #         wait: true
        #       loop:
        #         - hostname: '{{ victoriametrics_map.service.alertmanager.hostname }}'
        #           name: '{{ victoriametrics_map.service.alertmanager.name }}'
        #         - hostname: '{{ victoriametrics_map.service.grafana.hostname }}'
        #           name: '{{ victoriametrics_map.service.grafana.name }}'
        #         - hostname: '{{ victoriametrics_map.service.vmselect.hostname }}'
        #           name: '{{ victoriametrics_map.service.vmselect.name }}'

        #     - name: Create https route
        #       kubernetes.core.k8s:
        #         definition: "{{ lookup('ansible.builtin.template', 'https_route.j2') | from_yaml }}"
        #         kubeconfig: '{{ k3s_map.cluster.kubeconfig }}'
        #         wait: true
        #       loop:
        #         - hostname: '{{ victoriametrics_map.service.alertmanager.hostname }}'
        #           name: '{{ victoriametrics_map.service.alertmanager.name }}'
        #           port: '{{ victoriametrics_map.service.alertmanager.port }}'
        #         - hostname: '{{ victoriametrics_map.service.grafana.hostname }}'
        #           name: '{{ victoriametrics_map.service.grafana.name }}'
        #           port: '{{ victoriametrics_map.service.grafana.port }}'
        #         - hostname: '{{ victoriametrics_map.service.vmselect.hostname }}'
        #           name: '{{ victoriametrics_map.service.vmselect.name }}'
        #           port: '{{ victoriametrics_map.service.vmselect.port }}'

        # - name: Set frontend loadbalancer ip
        #   kubernetes.core.k8s:
        #     definition: "{{ lookup('ansible.builtin.template', 'loadbalancer.j2') | from_yaml }}"
        #     kubeconfig: '{{ k3s_map.cluster.kubeconfig }}'
        #   loop:
        #     - annotations: '{{ victoriametrics_map.service.alertmanager.annotations }}'
        #       name: '{{ victoriametrics_map.service.alertmanager.name }}'
        #     - annotations: '{{ victoriametrics_map.service.grafana.annotations }}'
        #       name: '{{ victoriametrics_map.service.grafana.name }}'
        #     - annotations: '{{ victoriametrics_map.service.vmselect.annotations }}'
        #       name: '{{ victoriametrics_map.service.vmselect.name }}'
        #   when: cloudflare_vars.kubernetes.host.domain | lower == 'disabled'
