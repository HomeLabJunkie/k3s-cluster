global:
  cluster:
    dnsDomain: {{ k3s_vars.cluster.domain }}.
  clusterLabel: {{ k3s_map.cluster.label }}
alertmanager:
  config:
    {{ lookup('ansible.builtin.template', 'config_alertmanager.j2') | indent(4) }}
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    annotations:
{% for key, value in victoriametrics_map.ingress.alertmanager.annotations.items() %}
      {{ key | indent(6) }}: {{ value }}
{% endfor %}
    enabled: {{ victoriametrics_vars.kubernetes.alertmanager.ingress.enabled }}
    hosts:
      - {{ victoriametrics_map.ingress.alertmanager.hostname }}
{% if not global_map.infrastructure.enabled %}
    ingressClassName: cilium
{% endif %}
    tls:
      - hosts:
          - {{ victoriametrics_map.ingress.alertmanager.hostname }}
        secretName: {{ externaldns_vars.cloudflare.tls.key_prefix }}-{{ victoriametrics_map.ingress.alertmanager.name }}
{% endif %}
  spec:
    logLevel: {{ victoriametrics_vars.kubernetes.vmagent.log_level }}
    podDisruptionBudget:
      maxUnavailable: 1
{% if global_map.infrastructure.enabled %}
    serviceSpec:
      metadata:
        annotations:
{% for key, value in victoriametrics_map.infrastructure.alertmanager.annotations.items() %}
          {{ key | indent(10) }}: {{ value }}
{% endfor %}
      spec:
        type: LoadBalancer
      useAsDefault: true
{% endif %}
    storage:
{% if victoriametrics_vars.kubernetes.alertmanager.storage.enabled %}
      volumeClaimTemplate:
        spec:
          accessModes:
            {{ victoriametrics_vars.kubernetes.alertmanager.storage.access_modes | to_nice_yaml | indent(12) }}
          resources:
            requests:
              storage: {{ victoriametrics_vars.kubernetes.alertmanager.storage.size }}
          storageClassName: {{ victoriametrics_vars.kubernetes.alertmanager.storage.class }}
{% else %}
    emptyDir:
      sizeLimit: {{ victoriametrics_vars.kubernetes.alertmanager.storage.size }}
{% endif %}
{% if victoriametrics_vars.kubernetes.alertmanager.replicas < 2 %}
    replicaCount: 2
{% else %}
    replicaCount: {{ victoriametrics_vars.kubernetes.alertmanager.replicas }}
{% endif %}
{% if victoriametrics_postinstall %}
    configReloaderResources:
      limits:
        cpu: {{ victoriametrics_vars.kubernetes.alertmanager.config_reloader.resources.limits.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.alertmanager.config_reloader.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.alertmanager.config_reloader.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.alertmanager.config_reloader.resources.requests.memory }}
    resources:
      limits:
        cpu: {{ victoriametrics_vars.kubernetes.alertmanager.resources.limits.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.alertmanager.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.alertmanager.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.alertmanager.resources.requests.memory }}
{% endif %}
defaultDashboards:
  dashboards:
    victoriametrics-operator:
      enabled: true
    victoriametrics-vmalert:
      enabled: true
  defaultTimezone: {{ victoriametrics_vars.kubernetes.default_dashboards.timezone }}
grafana:
  admin:
    existingSecret: {{ victoriametrics_map.credentials.grafana.secret }}
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    annotations:
{% for key, value in victoriametrics_map.ingress.grafana.annotations.items() %}
      {{ key | indent(6) }}: {{ value }}
{% endfor %}
    enabled: {{ victoriametrics_vars.kubernetes.grafana.ingress.enabled }}
    hosts:
      - {{ victoriametrics_map.ingress.grafana.hostname }}
{% if not global_map.infrastructure.enabled %}
    ingressClassName: cilium
{% endif %}
    tls:
      - hosts:
          - {{ victoriametrics_map.ingress.grafana.hostname }}
        secretName: {{ externaldns_vars.cloudflare.tls.key_prefix }}-{{ victoriametrics_map.ingress.grafana.name }}
{% endif %}
  logLevel: {{ victoriametrics_vars.kubernetes.grafana.log_level }}
  podDisruptionBudget:
    maxUnavailable: 1
  replicas: 1
{% if victoriametrics_postinstall %}
  resources:
    limits:
      cpu: {{ victoriametrics_vars.kubernetes.grafana.resources.limits.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.grafana.resources.limits.memory }}
    requests:
      cpu: {{ victoriametrics_vars.kubernetes.grafana.resources.requests.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.grafana.resources.requests.memory }}
  sidecar:
    resources:
      limits:
        cpu: {{ victoriametrics_vars.kubernetes.grafana.sidecar.resources.limits.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.grafana.sidecar.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.grafana.sidecar.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.grafana.sidecar.resources.requests.memory }}
{% endif %}
{% if global_map.infrastructure.enabled %}
  service:
    annotations:
{% for key, value in victoriametrics_map.infrastructure.grafana.annotations.items() %}
      {{ key | indent(6) }}: {{ value }}
{% endfor %}
    type: LoadBalancer
{% endif %}
kube-state-metrics:
  podDisruptionBudget:
    maxUnavailable: 1
  replicas: {{ victoriametrics_vars.kubernetes.kube_state_metrics.replicas }}
{% if victoriametrics_postinstall %}
  resources:
    limits:
      cpu: {{ victoriametrics_vars.kubernetes.kube_state_metrics.resources.limits.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.kube_state_metrics.resources.limits.memory }}
    requests:
      cpu: {{ victoriametrics_vars.kubernetes.kube_state_metrics.resources.requests.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.kube_state_metrics.resources.requests.memory }}
{% endif %}
kubeControllerManager:
  endpoints:
    {{ k3s_map_server.ips | to_nice_yaml | indent(4) }}
  vmScrape:
    spec:
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecureSkipVerify: true
            serverName: localhost
kubeEtcd:
{% if not k3s_map.cluster.ha %}
  enabled: false
{% endif %}
  endpoints:
    {{ k3s_map_server.ips | to_nice_yaml | indent(4) }}
  service:
    port: 2381
    targetPort: 2381
  vmScrape:
    spec:
      endpoints:
        - port: http-metrics
          scheme: http
kubeScheduler:
  endpoints:
    {{ k3s_map_server.ips | to_nice_yaml | indent(4) }}
  vmScrape:
    spec:
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          port: http-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecureSkipVerify: true
            serverName: localhost
{% if victoriametrics_postinstall %}
prometheus-node-exporter:
  resources:
    limits:
      cpu: {{ victoriametrics_vars.kubernetes.prometheus_node_exporter.resources.limits.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.prometheus_node_exporter.resources.limits.memory }}
    requests:
      cpu: {{ victoriametrics_vars.kubernetes.prometheus_node_exporter.resources.requests.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.prometheus_node_exporter.resources.requests.memory }}
{% endif %}
prometheus-operator-crds:
  enabled: true
victoria-metrics-operator:
  logLevel: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.log_level }}
  operator:
    admissionWebhooks:
      certManager:
        enabled: true
        issuer:
          group: cert-manager.io
          kind: ClusterIssuer
          name: {{ certmanager_vars.kubernetes.tls.cluster_issuer.name }}
    enable_converter_ownership: true
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1
  replicaCount: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.replicas }}
{% if victoriametrics_postinstall %}
  resources:
    limits:
      cpu: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.resources.limits.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.resources.limits.memory }}
    requests:
      cpu: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.resources.requests.cpu }}
      memory: {{ victoriametrics_vars.kubernetes.victoria_metrics_operator.resources.requests.memory }}
{% endif %}
vmagent:
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    annotations:
{% for key, value in victoriametrics_map.ingress.vmagent.annotations.items() %}
      {{ key | indent(6) }}: {{ value }}
{% endfor %}
    enabled: {{ victoriametrics_vars.kubernetes.vmagent.ingress.enabled }}
    hosts:
      - {{ victoriametrics_map.ingress.vmagent.hostname }}
{% if not global_map.infrastructure.enabled %}
    ingressClassName: cilium
{% endif %}
    tls:
      - hosts:
          - {{ victoriametrics_map.ingress.vmagent.hostname }}
        secretName: {{ externaldns_vars.cloudflare.tls.key_prefix }}-{{ victoriametrics_map.ingress.vmagent.name }}
{% endif %}
  spec:
    logLevel: {{ victoriametrics_vars.kubernetes.vmagent.log_level }}
    podDisruptionBudget:
      maxUnavailable: 1
    replicaCount: {{ victoriametrics_vars.kubernetes.vmagent.replicas }}
{% if global_map.infrastructure.enabled %}
    serviceSpec:
      metadata:
        annotations:
{% for key, value in victoriametrics_map.infrastructure.vmagent.annotations.items() %}
          {{ key | indent(10) }}: {{ value }}
{% endfor %}
      spec:
        type: LoadBalancer
      useAsDefault: true
{% endif %}
{% if victoriametrics_postinstall %}
    configReloaderResources:
      limits:
        cpu: {{ victoriametrics_vars.kubernetes.vmagent.config_reloader.resources.limits.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmagent.config_reloader.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmagent.config_reloader.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmagent.config_reloader.resources.requests.memory }}
    resources:
      limits:
        cpu: {{ victoriametrics_vars.kubernetes.vmagent.resources.limits.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmagent.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmagent.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmagent.resources.requests.memory }}
{% endif %}
    storage:
{% if victoriametrics_vars.kubernetes.vmagent.storage.enabled %}
      volumeClaimTemplate:
        spec:
          accessModes:
            {{ victoriametrics_vars.kubernetes.vmagent.storage.access_modes | to_nice_yaml | indent(12) }}
          resources:
            requests:
              storage: {{ victoriametrics_vars.kubernetes.vmagent.storage.size }}
          storageClassName: {{ victoriametrics_vars.kubernetes.vmagent.storage.class }}
{% else %}
      emptyDir:
        sizeLimit: {{ victoriametrics_vars.kubernetes.vmagent.storage.size }}
{% endif %}
vmalert:
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    annotations:
{% for key, value in victoriametrics_map.ingress.vmalert.annotations.items() %}
      {{ key | indent(6) }}: {{ value }}
{% endfor %}
    enabled: {{ victoriametrics_vars.kubernetes.vmalert.ingress.enabled }}
    hosts:
      - {{ victoriametrics_map.ingress.vmalert.hostname }}
{% if not global_map.infrastructure.enabled %}
    ingressClassName: cilium
{% endif %}
    tls:
      - hosts:
          - {{ victoriametrics_map.ingress.vmalert.hostname }}
        secretName: {{ externaldns_vars.cloudflare.tls.key_prefix }}-{{ victoriametrics_map.ingress.vmalert.name }}
{% endif %}
  spec:
    logLevel: {{ victoriametrics_vars.kubernetes.vmalert.log_level }}
    podDisruptionBudget:
      maxUnavailable: 1
    replicaCount: {{ victoriametrics_vars.kubernetes.vmagent.replicas }}
{% if global_map.infrastructure.enabled %}
    serviceSpec:
      metadata:
        annotations:
{% for key, value in victoriametrics_map.infrastructure.vmalert.annotations.items() %}
          {{ key | indent(10) }}: {{ value }}
{% endfor %}
      spec:
        type: LoadBalancer
      useAsDefault: true
{% endif %}
{% if victoriametrics_postinstall %}
    configReloaderResources:
      limits:
        cpu: {{ victoriametrics_vars.kubernetes.vmalert.config_reloader.resources.limits.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmalert.config_reloader.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmalert.config_reloader.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmalert.config_reloader.resources.requests.memory }}
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' and victoriametrics_vars.kubernetes.vmalert.ingress.enabled %}
    extraArgs:
      external.url: https://{{ victoriametrics_map.ingress.vmalert.hostname }}
{% endif %}
    resources:
      limits:
        cpu: {{ victoriametrics_vars.kubernetes.vmalert.resources.limits.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmalert.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmalert.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmalert.resources.requests.memory }}
{% endif %}
{% if k3s_map.cluster.ha and victoriametrics_vars.kubernetes.vmcluster.enabled %}
vmcluster:
  enabled: {{ victoriametrics_vars.kubernetes.vmcluster.enabled }}
{% if externaldns_vars.cloudflare.host.domain | lower != 'disabled' %}
  ingress:
    insert:
      enabled: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.ingress.enabled }}
      annotations:
{% for key, value in victoriametrics_map.ingress.vmcluster.vminsert.annotations.items() %}
        {{ key | indent(8) }}: {{ value }}
{% endfor %}
      hosts:
        - {{ victoriametrics_map.ingress.vmcluster.vminsert.hostname }}
{% if not global_map.infrastructure.enabled %}
      ingressClassName: cilium
{% endif %}
      tls:
        - hosts:
            - {{ victoriametrics_map.ingress.vmcluster.vminsert.hostname }}
          secretName: {{ externaldns_vars.cloudflare.tls.key_prefix }}-{{ victoriametrics_map.ingress.vmcluster.vminsert.name }}
    select:
      enabled: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.ingress.enabled }}
      annotations:
{% for key, value in victoriametrics_map.ingress.vmcluster.vmselect.annotations.items() %}
        {{ key | indent(8) }}: {{ value }}
{% endfor %}
      hosts:
        - {{ victoriametrics_map.ingress.vmcluster.vmselect.hostname }}
{% if not global_map.infrastructure.enabled %}
      ingressClassName: cilium
{% endif %}
      tls:
        - hosts:
            - {{ victoriametrics_map.ingress.vmcluster.vmselect.hostname }}
          secretName: {{ externaldns_vars.cloudflare.tls.key_prefix }}-{{ victoriametrics_map.ingress.vmcluster.vmselect.name }}
    storage:
      enabled: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.ingress.enabled }}
      annotations:
{% for key, value in victoriametrics_map.ingress.vmcluster.vmstorage.annotations.items() %}
        {{ key | indent(8) }}: {{ value }}
{% endfor %}
      hosts:
        - {{ victoriametrics_map.ingress.vmcluster.vmstorage.hostname }}
{% if not global_map.infrastructure.enabled %}
      ingressClassName: cilium
{% endif %}
      tls:
        - hosts:
            - {{ victoriametrics_map.ingress.vmcluster.vmstorage.hostname }}
          secretName: {{ externaldns_vars.cloudflare.tls.key_prefix }}-{{ victoriametrics_map.ingress.vmcluster.vmstorage.name }}
{% endif %}
  spec:
    replicationFactor: {{ victoriametrics_vars.kubernetes.vmcluster.replication_factor }}
    retentionPeriod: {{ victoriametrics_vars.kubernetes.vmcluster.retention_period }}
    vminsert:
{% if victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.enabled %}
      hpa:
        maxReplicas: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.max_replicas }}
        minReplicas: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.min_replicas }}
        metrics:
          - type: Resource
            resource:
              name: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.resource.name }}
              target:
                type: Utilization
                averageUtilization: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.resource.target.utilization }}
{% endif %}
      logLevel: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.log_level }}
      podDisruptionBudget:
        maxUnavailable: 1
{% if not victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.enabled %}
      replicaCount: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.hpa.min_replicas }}
{% endif %}
{% if global_map.infrastructure.enabled %}
      serviceSpec:
        metadata:
          annotations:
{% for key, value in victoriametrics_map.infrastructure.vmcluster.vminsert.annotations.items() %}
            {{ key | indent(12) }}: {{ value }}
{% endfor %}
        spec:
          type: LoadBalancer
        useAsDefault: true
{% endif %}
{% if victoriametrics_postinstall %}
      resources:
        limits:
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.resources.limits.cpu }}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.resources.limits.memory }}
        requests:
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.resources.requests.cpu }}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vminsert.resources.requests.memory }}
{% endif %}
    vmselect:
{% if victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.enabled %}
      hpa:
        maxReplicas: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.max_replicas }}
        minReplicas: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.min_replicas }}
        metrics:
          - type: Resource
            resource:
              name: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.resource.name }}
              target:
                type: Utilization
                averageUtilization: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.resource.target.utilization }}
{% endif %}
      logLevel: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.log_level }}
      podDisruptionBudget:
        maxUnavailable: 1
{% if not victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.enabled %}
      replicaCount: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.hpa.min_replicas }}
{% endif %}
{% if global_map.infrastructure.enabled %}
      serviceSpec:
        metadata:
          annotations:
{% for key, value in victoriametrics_map.infrastructure.vmcluster.vmselect.annotations.items() %}
            {{ key | indent(12) }}: {{ value }}
{% endfor %}
        spec:
          type: LoadBalancer
        useAsDefault: true
{% endif %}
{% if victoriametrics_postinstall %}
      resources:
        limits:
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.resources.limits.cpu }}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.resources.limits.memory }}
        requests:
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.resources.requests.cpu }}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.resources.requests.memory }}
{% endif %}
      storage:
{% if victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.enabled %}
        volumeClaimTemplate:
          spec:
            accessModes:
              {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.access_modes | to_nice_yaml | indent(14) }}
            resources:
              requests:
                storage: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.size }}
            storageClassName: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.class }}
{% else %}
        emptyDir:
          sizeLimit: {{ victoriametrics_vars.kubernetes.vmcluster.vmselect.storage.size }}
{% endif %}
    vmstorage:
      logLevel: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.log_level }}
      podDisruptionBudget:
        maxUnavailable: 1
      replicaCount: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.replicas }}
{% if global_map.infrastructure.enabled %}
      serviceSpec:
        metadata:
          annotations:
{% for key, value in victoriametrics_map.infrastructure.vmcluster.vmstorage.annotations.items() %}
            {{ key | indent(12) }}: {{ value }}
{% endfor %}
        spec:
          type: LoadBalancer
        useAsDefault: true
{% endif %}
{% if victoriametrics_postinstall %}
      resources:
        limits:
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.limits.cpu }}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.limits.memory }}
        requests:
          cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.requests.cpu }}
          memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.requests.memory }}
{% endif %}
      storage:
{% if victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.enabled %}
        volumeClaimTemplate:
          spec:
            accessModes:
              {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.access_modes | to_nice_yaml | indent(14) }}
            resources:
              requests:
                storage: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.size }}
            storageClassName: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.class }}
{% else %}
        emptyDir:
          sizeLimit: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.size }}
{% endif %}
vmsingle:
  enabled: false
{% else %}
vmsingle:
  spec:
    logLevel: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.log_level }}
    podDisruptionBudget:
      maxUnavailable: 1
    replicaCount: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.replicas }}
    retentionPeriod: {{ victoriametrics_vars.kubernetes.vmcluster.retention_period }}
{% if victoriametrics_postinstall %}
    resources:
      limits:
        cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.limits.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.limits.memory }}
      requests:
        cpu: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.requests.cpu }}
        memory: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.resources.requests.memory }}
{% endif %}
    storage:
{% if victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.enabled %}
      volumeClaimTemplate:
        spec:
          accessModes:
            {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.access_modes | to_nice_yaml | indent(12) }}
          resources:
            requests:
              storage: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.size }}
          storageClassName: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.class }}
{% else %}
      emptyDir:
        sizeLimit: {{ victoriametrics_vars.kubernetes.vmcluster.vmstorage.storage.size }}
{% endif %}
{% endif %}
