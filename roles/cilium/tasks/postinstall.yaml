---
- name: Import facts
  ansible.builtin.include_role:
    name: '{{ item }}'
    tasks_from: facts
  loop:
    - certmanager
    - cloudflare
    - k3s

- name: Role Post-Install
  when: ansible_host in k3s_server_hosts
  run_once: true
  block:
    - name: Gateway Setup
      when: cloudflare_vars.kubernetes.gateway.domain | lower != 'disabled'
      block:
        - name: Set hostname fact
          ansible.builtin.set_fact:
            hostname: '{{ cilium_vars.kubernetes.hubble.ui.gateway.subdomain }}.{{ cloudflare_vars.kubernetes.gateway.domain }}'

        - name: Create hubble ui gateway
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'gateway.j2') | from_yaml }}"
            kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
            wait: true

        - name: Create http route
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'http_route.j2') | from_yaml }}"
            kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
            wait: true

        - name: Create https route
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'https_route.j2') | from_yaml }}"
            kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
            wait: true

    - name: Set hubble ui loadbalancer ip
      kubernetes.core.k8s:
        definition: "{{ lookup('ansible.builtin.template', 'loadbalancer.j2') | from_yaml }}"
        kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
      when: cloudflare_vars.kubernetes.gateway.domain | lower == 'disabled'

    - name: Hubble TLS
      when: cilium_vars.kubernetes.hubble.tls.auto.method | lower == 'certmanager'
      block:
        - name: Create hubble certificate
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'certificate.j2') | from_yaml }}"
            kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
            wait: true

        - name: Create hubble cluster issuer
          kubernetes.core.k8s:
            definition: "{{ lookup('ansible.builtin.template', 'cluster_issuer.j2') | from_yaml }}"
            kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
            wait: true

    - name: Set chart setup fact
      ansible.builtin.set_fact:
        cilium_setup: false

    - name: Set chart postinstall fact
      ansible.builtin.set_fact:
        cilium_postinstall: true

    - name: Update chart postinstall values
      kubernetes.core.helm:
        chart_ref: '{{ cilium_project_chart }}'
        chart_version: '{{ cilium_vars.kubernetes.helm.chart.version }}'
        kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
        name: '{{ cilium_vars.kubernetes.helm.chart.name }}'
        namespace: '{{ cilium_vars.kubernetes.namespace }}'
        values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
        reset_values: false
        reuse_values: true
        wait: true
      register: result
      delay: 1
      retries: 3
      until: result is not failed
