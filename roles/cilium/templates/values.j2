{% if cilium_setup %}
bandwidthManager:
  enabled: true
bpf:
  datapathMode: {{ cilium_vars.kubernetes.bpf.datapath_mode }}
  lbExternalClusterIP: {{ cilium_vars.kubernetes.bpf.external_access }}
  masquerade: {{ cilium_vars.kubernetes.bpf.masquerade }}
  tproxy: {{ cilium_vars.kubernetes.bpf.tproxy }}
{% if cilium_vars.kubernetes.bpf.vlan_bypass_ids is iterable and cilium_vars.kubernetes.bpf.vlan_bypass_ids | length > 0 %}
  vlanBypass:
    {{ cilium_vars.kubernetes.bpf.vlan_bypass_ids | to_nice_yaml | indent(4) }}
{% endif %}
bpfClockProbe: {{ cilium_vars.kubernetes.bpf.clock_probe }}
ciliumEndpointSlice:
  enabled: true
envoy:
  enabled: true
  rollOutPods: true
envoyConfig:
  enabled: true
externalIPs:
  enabled: true
gatewayAPI:
  enabled: true
  enableAlpn: true
ipam:
  operator:
    clusterPoolIPv4PodCIDRList: {{ cilium_vars.kubernetes.ipam.operator.cluster_pool }}
{% if cilium_vars.kubernetes.ip_masq_agent.enabled %}
ipMasqAgent:
  config:
    nonMasqueradeCIDRs:
      {{ cilium_vars.kubernetes.ip_masq_agent.non_masquerade_cidrs | to_nice_yaml | indent(6) }}
  enabled: {{ cilium_vars.kubernetes.ip_masq_agent.enabled }}
{% endif %}
hubble:
  peerService:
    clusterDomain: {{ k3s_vars.cluster.domain }}
  relay:
    enabled: true
    podDisruptionBudget:
      enabled: true
    replicas: {{ cilium_vars.kubernetes.hubble.relay.replicas }}
    retryTimeout: {{ cilium_vars.kubernetes.hubble.relay.retry_timeout }}
    rollOutPods: true
  ui:
    enabled: true
    podDisruptionBudget:
      enabled: true
    replicas: {{ cilium_vars.kubernetes.hubble.ui.replicas }}
    rollOutPods: true
k8sClientRateLimit:
  burst: {{ cilium_vars.kubernetes.client.rate_limit.burst }}
  qps: {{ cilium_vars.kubernetes.client.rate_limit.qps }}
k8sServiceHost: {{ k3s_vars.cluster.service.host }}
k8sServicePort: {{ k3s_vars.cluster.service.port }}
kubeProxyReplacement: true
logOptions:
  level: {{ cilium_vars.kubernetes.log_options.level }}
operator:
  rollOutPods: true
rollOutCiliumPods: true
{% elif cilium_postinstall %}
cgroup:
  resources:
    limits:
      cpu: {{ cilium_vars.kubernetes.cgroup.resources.limits.cpu }}
      memory: {{ cilium_vars.kubernetes.cgroup.resources.limits.memory }}
    requests:
      cpu: {{ cilium_vars.kubernetes.cgroup.resources.requests.cpu }}
      memory: {{ cilium_vars.kubernetes.cgroup.resources.requests.memory }}
cni:
  resources:
    limits:
      cpu: {{ cilium_vars.kubernetes.cni.resources.limits.cpu }}
      memory: {{ cilium_vars.kubernetes.cni.resources.limits.memory }}
    requests:
      cpu: {{ cilium_vars.kubernetes.cni.resources.requests.cpu }}
      memory: {{ cilium_vars.kubernetes.cni.resources.requests.memory }}
dashboards:
  enabled: true
envoy:
  prometheus:
    serviceMonitor:
      enabled: true
      namespace: {{ victoriametrics_vars.kubernetes.namespace }}
  resources:
    limits:
      cpu: {{ cilium_vars.kubernetes.envoy.resources.limits.cpu }}
      memory: {{ cilium_vars.kubernetes.envoy.resources.limits.memory }}
    requests:
      cpu: {{ cilium_vars.kubernetes.envoy.resources.requests.cpu }}
      memory: {{ cilium_vars.kubernetes.envoy.resources.requests.memory }}
hubble:
  metrics:
    dashboards:
      enabled: true
    enabled:
      - dns:query;ignoreAAAA
      - drop
      - flow
      - httpV2
      - icmp
      - port-distribution
      - tcp
    serviceMonitor:
      enabled: true
      namespace: {{ victoriametrics_vars.kubernetes.namespace }}
  relay:
    prometheus:
      enabled: true
      serviceMonitor:
        enabled: true
        namespace: {{ victoriametrics_vars.kubernetes.namespace }}
    resources:
      limits:
        cpu: {{ cilium_vars.kubernetes.hubble.relay.resources.limits.cpu }}
        memory: {{ cilium_vars.kubernetes.hubble.relay.resources.limits.memory }}
      requests:
        cpu: {{ cilium_vars.kubernetes.hubble.relay.resources.requests.cpu }}
        memory: {{ cilium_vars.kubernetes.hubble.relay.resources.requests.memory }}
  ui:
    backend:
      resources:
        limits:
          cpu: {{ cilium_vars.kubernetes.hubble.ui.backend.resources.limits.cpu }}
          memory: {{ cilium_vars.kubernetes.hubble.ui.backend.resources.limits.memory }}
        requests:
          cpu: {{ cilium_vars.kubernetes.hubble.ui.backend.resources.requests.cpu }}
          memory: {{ cilium_vars.kubernetes.hubble.ui.backend.resources.requests.memory }}
    frontend:
      resources:
        limits:
          cpu: {{ cilium_vars.kubernetes.hubble.ui.frontend.resources.limits.cpu }}
          memory: {{ cilium_vars.kubernetes.hubble.ui.frontend.resources.limits.memory }}
        requests:
          cpu: {{ cilium_vars.kubernetes.hubble.ui.frontend.resources.requests.cpu }}
          memory: {{ cilium_vars.kubernetes.hubble.ui.frontend.resources.requests.memory }}
{% if cilium_vars.kubernetes.hubble.tls.auto.method | lower == 'certmanager' %}
  tls:
    auto:
      certManagerIssuerRef:
        group: cert-manager.io
        kind: ClusterIssuer
        name: {{ cilium_vars.kubernetes.hubble.tls.cluster_issuer.name }}
      method: {{ cilium_vars.kubernetes.hubble.tls.auto.method }}
{% endif %}
operator:
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: {{ victoriametrics_vars.kubernetes.namespace }}
  resources:
    limits:
      cpu: {{ cilium_vars.kubernetes.operator.resources.limits.cpu }}
      memory: {{ cilium_vars.kubernetes.operator.resources.limits.memory }}
    requests:
      cpu: {{ cilium_vars.kubernetes.operator.resources.requests.cpu }}
      memory: {{ cilium_vars.kubernetes.operator.resources.requests.memory }}
prometheus:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: {{ victoriametrics_vars.kubernetes.namespace }}
resources:
  limits:
    cpu: {{ cilium_vars.kubernetes.agent.resources.limits.cpu }}
    memory: {{ cilium_vars.kubernetes.agent.resources.limits.memory }}
  requests:
    cpu: {{ cilium_vars.kubernetes.agent.resources.requests.cpu }}
    memory: {{ cilium_vars.kubernetes.agent.resources.requests.memory }}
{% else %}
autoDirectNodeRoutes: true
directRoutingSkipUnreachable: true
ingressController:
  enabled: true
ipv4NativeRoutingCIDR: {{ cilium_vars.kubernetes.ipam.operator.cluster_pool }}
l2announcements:
  enabled: true
  leaseDuration: 15s
  leaseRenewDeadline: 5s
  leaseRetryPeriod: 2s
l2podAnnouncements:
  enabled: true
  interface: {{ k3s_vars.network.interface }}
loadBalancer:
  l7:
    backend: envoy
{% if cilium_vars.kubernetes.loadbalancer.algorithm | lower == 'maglev' %}
  algorithm: {{ cilium_vars.kubernetes.loadbalancer.algorithm }}
maglev:
  hashSeed: "{{ lookup('ansible.builtin.password', '/dev/null', chars=['ascii_letters', 'digits'], length=16) }}"
  tableSize: {{ cilium_vars.kubernetes.loadbalancer.table_size }}
{% endif %}
routingMode: native
{% endif %}
